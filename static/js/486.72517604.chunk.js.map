{"version":3,"file":"static/js/486.72517604.chunk.js","mappings":"4MAqEA,UAhEiB,WACf,IAAAA,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,IAAMb,EAAOa,EAAEC,cAAcd,KACvBe,EAAQF,EAAEC,cAAcC,MAE9B,OAAQf,GACN,IAAK,OAEH,YADAC,EAAQc,GAGV,IAAK,QAEH,YADAV,EAASU,GAGX,IAAK,WAEH,YADAN,EAAYM,GAMlB,EAOA,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,SANa,SAAAL,GACnBA,EAAEM,iBACFT,GAASU,EAAAA,EAAAA,IAAS,CAAEpB,KAAAA,EAAMI,MAAAA,EAAOI,SAAAA,IACnC,EAG+Ba,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,eACPC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CACJC,KAAK,OACLxB,KAAK,OACLe,MAAOf,EACPyB,SAAU,SAAAZ,GAAC,OAAID,EAAaC,EAAE,EAC9Ba,UAAQ,KAEVJ,EAAAA,EAAAA,KAAA,SAAAD,SAAO,YACPC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CACJC,KAAK,QACLxB,KAAK,QACLe,MAAOX,EACPqB,SAAU,SAAAZ,GAAC,OAAID,EAAaC,EAAE,EAC9Ba,UAAQ,KAEVJ,EAAAA,EAAAA,KAAA,SAAAD,SAAO,eACPC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CACJC,KAAK,WACLxB,KAAK,WACLe,MAAOP,EACPiB,SAAU,SAAAZ,GAAC,OAAID,EAAaC,EAAE,EAC9Ba,UAAQ,KAEVJ,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CAACH,KAAK,SAAQH,SAAC,cAG5B,C,qICjEaJ,EAAOW,EAAAA,EAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mIAQlBP,EAAQK,EAAAA,EAAAA,MAAYG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,8MAapBH,EAASC,EAAAA,EAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4O","sources":["Pages/Register/Register.jsx","helper/Styles/Form.styled.js"],"sourcesContent":["import { Button, Form, Input } from 'helper/Styles/Form.styled';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\n\nconst Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const name = e.currentTarget.name;\n    const value = e.currentTarget.value;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        return;\n\n      case 'email':\n        setEmail(value);\n        return;\n\n      case 'password':\n        setPassword(value);\n        return;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(register({ name, email, password }));\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>Username </label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={e => handleChange(e)}\n        required\n      />\n      <label>Email </label>\n      <Input\n        type=\"email\"\n        name=\"email\"\n        value={email}\n        onChange={e => handleChange(e)}\n        required\n      />\n      <label>Password </label>\n      <Input\n        type=\"password\"\n        name=\"password\"\n        value={password}\n        onChange={e => handleChange(e)}\n        required\n      />\n      <Button type=\"submit\">Sign up</Button>\n    </Form>\n  );\n};\n\nexport default Register;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  border-bottom: 2px solid gray;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  margin-top: 5px;\n  width: 200px;\n  border-radius: 4px;\n  border: none;\n  outline: 2px solid grey;\n  font-weight: 600;\n  color: #5187ec;\n  &:focus {\n    outline: 2px solid #5187ec;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  width: 120px;\n  height: 20px;\n  text-align: center;\n  background-color: #fff;\n  &:hover {\n    cursor: pointer;\n    background-color: #5187ec;\n  }\n`;\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","dispatch","useDispatch","handleChange","e","currentTarget","value","_jsxs","Form","onSubmit","preventDefault","register","children","_jsx","Input","type","onChange","required","Button","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3"],"sourceRoot":""}