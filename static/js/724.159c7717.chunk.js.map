{"version":3,"file":"static/js/724.159c7717.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","components/ContactList/ContactList.styled.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/AddContactForm/AddContactForm.styled.jsx","components/AddContactForm/AddContactForm.jsx","../node_modules/nanoid/index.browser.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","Pages/Contacts/Contacts.styled.jsx","Pages/Contacts/Contacts.jsx","helper/Loader.js","helper/Styles/Form.styled.js"],"sourcesContent":["// all contacts\nexport const getContacts = state => state.contacts.contacts.items;\n\n// loading contacts status\nexport const getLoadingStatus = state =>\n  state.contacts.contacts.isLoadingContacts;\n\n// add contact\nexport const getIsAddingContact = state =>\n  state.contacts.contacts.addingContact.isAddingContact;\nexport const getAddingContactStatus = state =>\n  state.contacts.contacts.addingContact.addingContactStatus;\n\n// delete contact\nexport const getIsDeletingContact = state =>\n  state.contacts.contacts.deletingContact.isDeletingContact;\n\nexport const getError = state => state.contacts.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  margin-left: 20px;\n  padding: 0;\n  list-style: none;\n  min-height: max-content;\n  max-height: 250px;\n  text-align: start;\n  overflow-y: scroll;\n`;\n","import styled from '@emotion/styled';\n\nexport const Li = styled.li`\n  margin-left: 0;\n  margin-right: 15px;\n  padding: 3px 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  vertical-align: baseline;\n  border-radius: 4px;\n`;\n\nexport const Button = styled.button`\n  margin-left: 20px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  width: 70px;\n  height: 20px;\n  text-align: center;\n  background-color: #fff;\n  &:hover {\n    cursor: pointer;\n    background-color: lightcoral;\n  }\n`;\n\nexport const Span = styled.span`\n  padding-left: 10px;\n`;\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\nimport { Button, Li } from './Contact.styled';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = contactData => {\n    dispatch(deleteContact(contactData));\n  };\n\n  return (\n    <Li>\n      <span>{name}:</span>\n      <span>{number}</span>\n\n      <Button type=\"button\" onClick={() => handleDeleteContact({ id, name })}>\n        Delete\n      </Button>\n    </Li>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contacts/contactsSelectors';\nimport { Ul } from './ContactList.styled';\nimport { Contact } from 'components/Contact/Contact';\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const filteredContacts = [...contacts];\n\n  if (!Array.isArray(contacts)) {\n    return <p>No contacts to display.</p>;\n  }\n\n  function getFilterContacts() {\n    if (contacts.length > 0) {\n      return filteredContacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    } else {\n      return contacts;\n    }\n  }\n\n  return (\n    <>\n      {filter.trim() !== '' && getFilterContacts().length === 0 ? (\n        <p>You don`t have contacts with this name.</p>\n      ) : (\n        <Ul>\n          {getFilterContacts().map(contact => {\n            const { id, name, number } = contact;\n            return <Contact key={id} id={id} name={name} number={number} />;\n          })}\n        </Ul>\n      )}\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  width: 120px;\n  height: 20px;\n  text-align: center;\n  background-color: #fff;\n  &:hover {\n    cursor: pointer;\n    background-color: #5187ec;\n    color: white;\n  }\n`;\n","import Loader from 'helper/Loader';\nimport { notifyOptions } from 'helper/NotifyOptions';\nimport { nanoid } from 'nanoid';\nimport { Notify } from 'notiflix';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport {\n  getAddingContactStatus,\n  getContacts,\n  getIsAddingContact,\n} from 'redux/contacts/contactsSelectors';\nimport { Form } from '../../helper/Styles/Form.styled';\nimport { Button } from './AddContactForm.styled';\n\nexport default function AddContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const isAddingContact = useSelector(getIsAddingContact);\n  const addingContactStatus = useSelector(getAddingContactStatus);\n\n  useEffect(() => {\n    if (addingContactStatus === 201) {\n      setName('');\n      setNumber('');\n    }\n  }, [addingContactStatus]);\n\n  function SubmitHandle(event) {\n    event.preventDefault();\n\n    const id = nanoid();\n\n    if (contacts.some(e => e.name.toLowerCase() === name.toLowerCase())) {\n      Notify.failure(`${name} is already in contacts.`, notifyOptions);\n    } else {\n      dispatch(addContact({ id, name, number }));\n    }\n  }\n\n  return (\n    <Form onSubmit={SubmitHandle}>\n      <label htmlFor=\"name\">\n        Name <br />\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => {\n            setName(e.target.value);\n          }}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label htmlFor=\"number\">\n        Phone <br />\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={e => {\n            setNumber(e.target.value);\n          }}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone phone must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <Button type=\"submit\">\n        {isAddingContact ? (\n          <Loader width=\"16\" height=\"16\" color=\"black\" />\n        ) : (\n          'Add contact'\n        )}\n      </Button>\n    </Form>\n  );\n}\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import styled from '@emotion/styled';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  p {\n    display: block;\n    margin-bottom: 0;\n    padding: 0;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { filterByName } from 'redux/contacts/contactsSlice';\nimport { FilterWrapper } from './Filter.styled';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n\n  return (\n    <FilterWrapper>\n      <label htmlFor=\"filter\">\n        <p>Find contact by name</p>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          onChange={e => dispatch(filterByName(e.target.value.toLowerCase()))}\n        />\n      </label>\n    </FilterWrapper>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const H1 = styled.h1`\n  padding: 0;\n  margin: 0;\n`;\n","import { useEffect, useState } from 'react';\n\nimport ContactList from 'components/ContactList/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { getContacts } from 'redux/contacts/contactsSelectors';\n\nimport Loader from 'helper/Loader';\nimport ContactsForm from 'components/AddContactForm/AddContactForm';\nimport Filter from 'components/Filter/Filter';\nimport { H1 } from './Contacts.styled';\n\nconst Contacts = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n  const [isMounting, setIsMounting] = useState(true);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    setIsMounting(false);\n  }, [dispatch]);\n\n  return (\n    <>\n      <H1>Phonebook</H1>\n      <ContactsForm />\n      <h2>Contacts</h2>\n\n      {isMounting ? (\n        <Loader />\n      ) : contacts.length > 0 ? (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <p>\n          No contacts yet. <br /> It's time to create new contacts!\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n","import { TailSpin } from 'react-loader-spinner';\n\nconst Loader = ({ height = '100', width = '100', color = '#4fa94d' }) => {\n  return (\n    <TailSpin\n      height=\"40\"\n      width=\"40\"\n      color=\"#4fa94d\"\n      ariaLabel=\"tail-spin-loading\"\n      radius=\"0.5\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  border-bottom: 2px solid gray;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  margin-top: 5px;\n  width: 200px;\n  border-radius: 4px;\n  border: none;\n  outline: 2px solid grey;\n  font-weight: 600;\n  color: #5187ec;\n  &:focus {\n    outline: 2px solid #5187ec;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-top: 10px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  width: 120px;\n  height: 20px;\n  text-align: center;\n  background-color: #fff;\n  &:hover {\n    cursor: pointer;\n    background-color: #5187ec;\n  }\n`;\n"],"names":["getContacts","state","contacts","items","getIsAddingContact","addingContact","isAddingContact","getAddingContactStatus","addingContactStatus","getFilter","filter","Ul","styled","_templateObject","_taggedTemplateLiteral","Li","Button","_templateObject2","_templateObject3","_templateObject4","Contact","_ref","id","name","number","dispatch","useDispatch","_jsxs","children","_jsx","type","onClick","contactData","deleteContact","ContactList","useSelector","filteredContacts","_toConsumableArray","Array","isArray","getFilterContacts","length","contact","toLowerCase","includes","_Fragment","trim","map","AddContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","useEffect","Form","onSubmit","event","preventDefault","size","arguments","undefined","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","some","e","Notify","concat","notifyOptions","addContact","htmlFor","value","onChange","target","pattern","title","required","Loader","width","height","color","FilterWrapper","Filter","filterByName","H1","isMounting","setIsMounting","fetchContacts","ContactsForm","TailSpin","ariaLabel","radius","visible","Input"],"sourceRoot":""}